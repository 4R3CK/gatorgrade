[tool.poetry]
name = "gatorgrade"
version = "0.1.1"
description = "Python tool to execute GatorGrader"
authors = ["Michael Abraham", "Jacob Allebach", "Liam Black", "Katherine Burgess", "Yanqiao Chen", "Ochirsaikhan Davaajambal", "Tuguldurnemekh Gantulga", "Anthony Grant-Cook", "Dylan Holland", "Gregory M. Kapfhammer", "Peyton Kelly", "Luke Lacaria", "Lauren Nevill", "Jack Turner", "Daniel Ullrich", "Garrison Vanzin", "Rian Watson"]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"
typer = "^0.4.1"
PyYAML = "^6.0"
gatorgrader = "^1.1.0"
rich = "^12.5.1"

[tool.poetry.dev-dependencies]
taskipy = "^1.10.1"
pytest = "^7.1.1"
pytest-cov = "^3.0.0"
pylint = "^2.13.4"
black = "^22.3.0"
pydocstyle = "^6.1.1"
mkdocs = "^1.3.0"
mkdocs-material = "^8.2.9"
mkdocstrings = {extras = ["python"], version = "^0.18.1"}
mkdocs-gen-files = "^0.3.4"
mkdocs-typer = "^0.0.2"
mkdocs-literate-nav = "^0.4.1"
toml = "^0.10.2"
pytest-sugar = "^0.9.5"
pytest-randomly = "^3.12.0"
pytest-clarity = "^1.0.1"

[tool.taskipy.tasks]
black = { cmd= "black gatorgrade tests --check", help = "Run the black checks for source code format" }
flake8 = { cmd = "flake8 gatorgrade tests", help = "Run the flake8 checks for source code documentation" }
test = { cmd = "pytest --cov-report term-missing --cov-branch --cov=gatorgrade tests/", help = "Run the pytest test suite" }
pylint = { cmd = "pylint gatorgrade tests", help = "Run the pylint checks for source code documentation" }
pydocstyle = { cmd = "pydocstyle gatorgrade tests", help = "Run the pydocstyle checks for source code documentation" }
all = "task black && task flake8 && task pydocstyle && task pylint && task test"
lint = "task black && task flake8 && task pydocstyle && task pylint"
mkdocs = { cmd = "mkdocs gh-deploy", help = "Build and deploy MKDocs documentation" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
gatorgrade = 'gatorgrade.main:app'
